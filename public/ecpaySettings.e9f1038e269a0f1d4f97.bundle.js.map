{"version":3,"file":"ecpaySettings.e9f1038e269a0f1d4f97.bundle.js","mappings":"mGAGIA,SACKC,eAAe,oBACfC,iBAAiB,UAAUC,UACxBC,EAAEC,iBAEF,MAAMC,EAAaN,SAASC,eAAe,WACrCM,EAAW,CACbC,WAAYR,SAASC,eAAe,cAAcQ,MAClDC,QAASV,SAASC,eAAe,WAAWQ,MAC5CE,OAAQX,SAASC,eAAe,UAAUQ,OAG9C,IACI,MAAMG,QAAiBC,MAAM,8BAA+B,CACxDC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUX,KAGnBY,QAAeP,EAASQ,OAE9B,IAAIR,EAASS,GAQT,MAAM,IAAIC,MAAMH,EAAOI,SAAW,aAPlCjB,EAAWkB,UAAY,kBACvBlB,EAAWmB,YAAc,WACzBC,QAAQC,IAAInB,YACZoB,YAAW,KACPC,OAAOC,SAASC,KAAO,iBAAiBxB,EAASC,YAAY,GAC9D,IAIX,CAAE,MAAOwB,GACL1B,EAAWkB,UAAY,gBACvBlB,EAAWmB,YAAcO,EAAMT,OACnC,CAEAjB,EAAW2B,MAAMC,QAAU,QAG3BN,YAAW,KACPtB,EAAW2B,MAAMC,QAAU,MAAM,GAClC,IAAK,IAIhBL,OAAO3B,iBAAiB,QAAQC,UAC5B,IACI,MAAMK,EAAa,IAAI2B,gBAAgBN,OAAOC,SAASM,QAAQC,IAC3D,MAEA7B,IACAR,SAASC,eAAe,cAAcQ,MAAQD,EAC9CR,SAASC,eAAe,cAAcqC,UAAW,EAEzD,CAAE,MAAON,GACLN,QAAQM,MAAM,aAAcA,EAChC,I","sources":["webpack://common-vote/./app/ecpay-setting.js"],"sourcesContent":["import './css/common.css';\r\n\r\n(function () {\r\n    document\r\n        .getElementById('ecpaySettingForm')\r\n        .addEventListener('submit', async e => {\r\n            e.preventDefault();\r\n\r\n            const messageDiv = document.getElementById('message');\r\n            const formData = {\r\n                merchantId: document.getElementById('merchantId').value,\r\n                hashKey: document.getElementById('hashKey').value,\r\n                hashIV: document.getElementById('hashIV').value,\r\n            };\r\n\r\n            try {\r\n                const response = await fetch('/api/v1/comme/ecpay/setting', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(formData),\r\n                });\r\n\r\n                const result = await response.json();\r\n\r\n                if (response.ok) {\r\n                    messageDiv.className = 'message success';\r\n                    messageDiv.textContent = '設定已成功儲存！';\r\n                    console.log(merchantId);\r\n                    setTimeout(() => {\r\n                        window.location.href = `index.html?id=${formData.merchantId}`;\r\n                    }, 1000);\r\n                } else {\r\n                    throw new Error(result.message || '儲存設定時發生錯誤');\r\n                }\r\n            } catch (error) {\r\n                messageDiv.className = 'message error';\r\n                messageDiv.textContent = error.message;\r\n            }\r\n\r\n            messageDiv.style.display = 'block';\r\n\r\n            // 3秒後自動隱藏訊息\r\n            setTimeout(() => {\r\n                messageDiv.style.display = 'none';\r\n            }, 3000);\r\n        });\r\n\r\n    // 如果需要，可以在頁面載入時讀取現有設定\r\n    window.addEventListener('load', async () => {\r\n        try {\r\n            const merchantId = new URLSearchParams(window.location.search).get(\r\n                'id'\r\n            );\r\n            if (merchantId) {\r\n                document.getElementById('merchantId').value = merchantId;\r\n                document.getElementById('merchantId').readOnly = true;\r\n            }\r\n        } catch (error) {\r\n            console.error('載入設定時發生錯誤:', error);\r\n        }\r\n    });\r\n})();\r\n"],"names":["document","getElementById","addEventListener","async","e","preventDefault","messageDiv","formData","merchantId","value","hashKey","hashIV","response","fetch","method","headers","body","JSON","stringify","result","json","ok","Error","message","className","textContent","console","log","setTimeout","window","location","href","error","style","display","URLSearchParams","search","get","readOnly"],"sourceRoot":""}